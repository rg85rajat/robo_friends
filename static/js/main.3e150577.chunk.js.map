{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAiBeA,EAfJ,SAAC,GACX,IADYC,EACb,EADaA,KAAKC,EAClB,EADkBA,MAAMC,EACxB,EADwBA,GAGvB,OAEC,sBAAKC,UAAU,sDAAf,UACA,qBAAKC,IAAI,QAAQC,IAAG,+BAA2BH,EAA3B,cACpB,gCACA,mCAAMF,KACN,4BAAIC,WCUSK,EAnBA,SAAC,GACf,IADgBC,EACjB,EADiBA,OAEhB,OACA,8BAESA,EAAOC,KAAI,SAACC,EAAKC,GACf,OACJ,cAAC,EAAD,CAEAR,GAAIK,EAAOG,GAAGR,GACdF,KAAOO,EAAOG,GAAGV,KACjBC,MAAOM,EAAOG,GAAGT,OAHZS,SCIEC,EAbC,SAAC,GAChB,IADiBC,EAClB,EADkBA,aAEjB,OACC,qBAAKT,UAAU,MAAf,SACA,uBACAA,UAAU,mCACVU,KAAK,SACJC,YAAY,gBACZC,SAAUH,OCDEI,EAPF,SAACC,GACZ,OACC,qBAAKC,MAAO,CAACC,SAAS,SAAUC,OAAO,kBAAmBC,OAAO,SAAjE,SACCJ,EAAMK,YCoBKC,E,kDAtBd,WAAYN,GACX,IAAD,8BACC,cAAMA,IACDO,MAAM,CACVC,UAAS,GAHX,E,qDAMA,SAAkBC,EAAMC,GAEvBC,KAAKC,SAAS,CAACJ,UAAS,M,oBAGzB,WAEC,OAAIG,KAAKJ,MAAMC,SAEP,wDAEDG,KAAKX,MAAMK,a,GAnBOQ,aC2DZC,G,wDAnDd,aACC,IAAD,8BACC,gBAkBFC,eAAe,SAACC,GAEf,EAAKJ,SAAS,CAACK,YAAYD,EAAME,OAAOC,SAnBvC,EAAKZ,MACL,CAGEjB,OAAO,GACJ2B,YAAY,IAPlB,E,qDAWD,WACC,IAAD,OACCG,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAE,EAAKZ,SAAS,CAACtB,OAAOkC,S,oBASpC,WACC,IAAD,EAC4Bb,KAAKJ,MAAzBjB,EADR,EACQA,OAAO2B,EADf,EACeA,YACRQ,EAAenC,EAAOoC,QAAO,SAAAC,GAElC,OAAOA,EAAM5C,KAAK6C,cAAcC,SAASZ,EAAYW,kBAEtD,OAAKtC,EAAOwC,OAMT,sBAAK5C,UAAU,KAAf,UACD,oBAAIA,UAAU,KAAd,0BACA,cAAC,EAAD,CAAWS,aAAcgB,KAAKI,iBAC7B,cAAC,EAAD,UACA,cAAC,EAAD,UACA,cAAC,EAAD,CAAUzB,OAAQmC,WATb,+C,GAnCSZ,cCIHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAKjDX,M","file":"static/js/main.3e150577.chunk.js","sourcesContent":["import React from 'react';\r\n//const Card=(props)=>\r\nconst Card=({name,email,id})=>\r\n{\r\n\t//const{name,email,id}=props;\r\n\treturn(\r\n\r\n\t\t<div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n\t\t<img alt='Robot' src ={`https://robohash.org/${id}?200x200`} />\r\n\t\t<div>\r\n\t\t<h2> {name}</h2> \r\n\t\t<p>{email}</p>\r\n\t\t</div>\r\n\t\t</div>\r\n   );\r\n\r\n}\r\nexport default Card;","import react from 'react';\r\nimport Card from './Card';\r\nconst CardList=({robots})=>\r\n{\r\n\treturn(\r\n\t<div>\r\n\t\t{\r\n          robots.map((user,i)=>{\r\n           \treturn(\r\n\t\t      <Card \r\n\t\t      key={i}\r\n\t\t      id={robots[i].id} \r\n\t\t      name ={robots[i].name} \r\n\t\t      email={robots[i].email} \r\n\t\t      />\r\n\t\t    );\r\n         })\r\n       }\r\n \t</div>\r\n );\r\n}\r\nexport default CardList;","import React from 'react';\r\nconst SearchBox=({searchChange})=>\r\n{\r\n\treturn(\r\n\t\t<div className='pa2'>\r\n\t\t<input \r\n\t\tclassName='pa3 ba b--green bg-lightest-blue'\r\n\t\ttype='search' \r\n\t\t placeholder='Search Robots'\r\n\t\t onChange={searchChange}\r\n\t\t />\r\n\t\t </div>\r\n\t\t);\r\n}\r\nexport default SearchBox;","import React from 'react';\r\nconst Scroll=(props)=>{\r\n  return(\r\n  \t<div style={{overflow:'scroll', border:'5px solid black', height:'750px'}}>\r\n  \t{props.children}\r\n  \t</div>\r\n  \t);\r\n};\r\nexport default Scroll;\r\n","import React, {Component} from 'react';\r\nclass ErrorBoundry extends Component{\r\n\tconstructor(props)\r\n\t{\r\n\t\tsuper(props);\r\n\t\tthis.state={\r\n\t\t\thasError:false\r\n\t\t}\r\n\t}\r\n\tcomponentDidCatch(error,info)\r\n\t{\r\n\t\tthis.setState({hasError:true})\r\n\t}\r\n\r\n\trender()\r\n\t{\r\n\t\tif (this.state.hasError)\r\n\t\t{\r\n\t\t\treturn <h1>Oops! That is not good</h1>\r\n\t\t}\r\n\t\treturn this.props.children\r\n\r\n\t}\r\n}\r\nexport default ErrorBoundry;\r\n","import React,{Component} from 'react';\r\nimport CardList from '../components/CardList'; \r\n// import {robots} from './robots';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\nimport './App.css';\r\n\r\nclass App extends Component{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper()\r\n\t\tthis.state=\r\n\t\t{\r\n\t\t  // robots: robots,\r\n\t\t  //remove componentDidMount to use commented part\r\n\t\t  robots:[],\r\n\t      searchfield:''\r\n\r\n\t}\r\n}\r\ncomponentDidMount()\r\n{\r\n\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t.then(response=> response.json())\r\n\t.then(users=>this.setState({robots:users}))\r\n\t//if users is not returned it will show loading.(in render method/ or it taked more then 0 sec)\r\n\t//users: jsonplaceholderfile\r\n}\r\nonSearchChange=(event)=>\r\n{\r\n\tthis.setState({searchfield:event.target.value})\r\n\t\r\n}\r\nrender()\r\n{\r\n\tconst {robots,searchfield}=this.state;\r\n\tconst filteredRobots=robots.filter(robot=>\r\n\t{\r\n\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n\t})\r\n\tif (!robots.length) //similar to === 0\r\n\t{\r\n\t\treturn <h1> Loading </h1>\r\n\t}\r\n\telse{\r\n return(\r\n   \t<div className='tc'>\r\n  \t<h1 className='f1'>RoboFriends </h1>\r\n  \t<SearchBox searchChange={this.onSearchChange}/> \r\n    <Scroll>\r\n    <ErrorBoundry>\r\n    <CardList robots={filteredRobots}/>\r\n    </ErrorBoundry>\r\n    </Scroll>\r\n    </div>\r\n  );\r\n}\r\n}\r\n}\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}